// An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.
message Activity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A event intended for use in the diagnosis, cure, mitigation, repairing, or prevention of error
message AdministrativeOperation
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasControlActor ControlActor = 11
 }
// A administrative operational exposure is an intake of a particular administrative operation.
message AdministrativeOperationalExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasControlActor ControlActor = 11
  optional timepoint TimeType = 12
 }
// An interaction between a administrative operational and a componentservice or servicetype.
message AdministrativeOperationalToComponentserviceAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object ComponentserviceOrServicetype = 16
 }
// administrative operational to componentservice interaction exposure is a administrative operational exposure is where the interactions of the administrative operational with specific componentservices are known to constitute an 'exposure' to the system, leading to or influencing an outcome.
message AdministrativeOperationalToComponentserviceInteractionExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasControlActor ControlActor = 11
  optional timepoint TimeType = 12
  repeated hasComponentserviceOrServicetype Componentservice = 13
 }
// service, group, organization or project that provides a piece of information (i.e. a knowledge association)
message Agent
 {
  optional iri IriType = 1
  optional type String = 2
  optional description NarrativeText = 3
  optional source LabelType = 4
  repeated providedBy Agent = 5
  repeated hasAttribute Attribute = 6
  repeated category NamedThing = 7
  repeated affiliation Uriorcurie = 8
  optional address String = 9
  id String = 10
  optional name LabelType = 11
 }
message Article
 {
  optional iri IriType = 1
  optional description NarrativeText = 2
  optional source LabelType = 3
  repeated providedBy Agent = 4
  repeated hasAttribute Attribute = 5
  repeated category NamedThing = 6
  optional license String = 7
  optional rights String = 8
  optional format String = 9
  optional creationDate Date = 10
  repeated authors String = 11
  repeated pages String = 12
  optional summary String = 13
  repeated keywords String = 14
  repeated sumoTerms Uriorcurie = 15
  repeated xref IriType = 16
  id String = 17
  optional name LabelType = 18
  type String = 19
  publishedIn Uriorcurie = 20
  optional isoAbbreviation String = 21
  optional volume String = 22
  optional issue String = 23
 }
// A typed association between two entities, supported by evidence
message Association
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
 }
// A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, resource.
message Attribute
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
message Awareness
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
message Behavior
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// An association between an aggregate behavior and a behavioral feature manifested by the individual exhibited or has exhibited the behavior.
message BehaviorToBehavioralFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject Behavior = 15
  object BehavioralFeature = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// A behavioral exposure is a factor relating to behavior impacting an individual.
message BehavioralExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
  optional timepoint TimeType = 13
 }
// A observable feature which is behavioral in nature.
message BehavioralFeature
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// An outcome resulting from an exposure event which is the manifestation of individual behavior.
message BehavioralOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// A biotic exposure is an intake of (sometimes faulty) computational systems (including viruses)
message BioticExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional hasTaxonomicRank TaxonomicRank = 10
  repeated subclassOf SystemTaxon = 11
  optional timepoint TimeType = 12
 }
message Bitstream
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// This class may rarely be available except if use cases of a given knowledge graph support its utility.
message Book
 {
  optional iri IriType = 1
  optional description NarrativeText = 2
  optional source LabelType = 3
  repeated providedBy Agent = 4
  repeated hasAttribute Attribute = 5
  repeated category NamedThing = 6
  optional license String = 7
  optional rights String = 8
  optional format String = 9
  optional creationDate Date = 10
  repeated authors String = 11
  repeated pages String = 12
  optional summary String = 13
  repeated keywords String = 14
  repeated sumoTerms Uriorcurie = 15
  repeated xref IriType = 16
  optional name LabelType = 17
  id String = 18
  type String = 19
 }
message BookChapter
 {
  optional iri IriType = 1
  optional description NarrativeText = 2
  optional source LabelType = 3
  repeated providedBy Agent = 4
  repeated hasAttribute Attribute = 5
  repeated category NamedThing = 6
  optional license String = 7
  optional rights String = 8
  optional format String = 9
  optional creationDate Date = 10
  repeated authors String = 11
  repeated pages String = 12
  optional summary String = 13
  repeated keywords String = 14
  repeated sumoTerms Uriorcurie = 15
  repeated xref IriType = 16
  id String = 17
  optional name LabelType = 18
  type String = 19
  publishedIn Uriorcurie = 20
  optional volume String = 21
  optional chapter String = 22
 }
// An individual system that has a patient role in some empirical context.
message Case
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// An association between a case (e.g. individual patient) and a observable feature in which the individual has or has had the observability.
message CaseToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
message CodingSequence
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// A group of individuals banded together or repaired as a group who share common characteristics. A cohort 'study' is a particular form of longitudinal study that samples a cohort, performing a cross-section at intervals through time.
message Cohort
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// A complex orchestration exposure is an intake of a orchestration cluster (e.g. gasoline), other than a administrative operation.
message ComplexOrchestrationExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional timepoint TimeType = 11
  repeated hasControlActor ControlActor = 12
 }
// The component is the smallest system entity, located in or around a serviceunit It can be deployed, isolated, and repaired independently. Each component belongs to one, and only one, serviceunit.
message Component
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// A component type defines the set of components running the same software and sharing the same configuration. It's a single point of configuration control.
message ComponentType
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
 }
message ComponentTypeAsAModelOfErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject ComponentType = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
 }
// An relationship between a component type and a error or a observability, where the component type is derived from an individual with that error or observability.
message ComponentTypeToErrorOrObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject ErrorOrObservableFeature = 16
 }
// A component service.
message Componentservice
 {
  optional name SymbolType = 1
  optional symbol String = 2
  repeated synonym LabelType = 3
  repeated xref IriType = 4
 }
message ComponentserviceAsAModelOfErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  optional frequencyQualifier FrequencyValue = 16
  optional severityQualifier SeverityValue = 17
  optional onsetQualifier Onset = 18
  subject ComponentserviceOrServicetype = 19
 }
// Observed componentservice availability intensity, context (site, stage) and associated observable status within which the availability occurs.
message ComponentserviceAvailabilityMixin
 {
  optional quantifierQualifier OntologyClass = 1
  optional availabilitySite DeploymentEntity = 2
  optional stageQualifier LifecycleStage = 3
  optional observableState ErrorOrObservableFeature = 4
 }
// any grouping of multiple componentservices or servicetypes related by common descent
message ComponentserviceFamily
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasComponentserviceOrServicetype Componentservice = 11
 }
message ComponentserviceHasVariantThatContributesToErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  optional frequencyQualifier FrequencyValue = 16
  optional severityQualifier SeverityValue = 17
  optional onsetQualifier Onset = 18
  optional sequenceVariantQualifier SequenceVariant = 19
  subject ComponentserviceOrServicetype = 20
 }
// an ontology class that describes a controlling aspect of a componentservice, servicetype or complex
message ComponentserviceOntologyClass
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A regulatory relationship between two componentservices
message ComponentserviceRegulatoryRelationship
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  subject ComponentserviceOrServicetype = 15
  object ComponentserviceOrServicetype = 16
 }
// An association between a componentservice and an availability site, possibly qualified by stage/timing info.
message ComponentserviceToAvailabilitySiteAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  optional stageQualifier LifecycleStage = 14
  optional quantifierQualifier OntologyClass = 15
  subject ComponentserviceOrServicetype = 16
  object DeploymentEntity = 17
  predicate PredicateType = 18
 }
// Indicates that two componentservices are co-available, generally under the same conditions.
message ComponentserviceToComponentserviceCoavailabilityAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject ComponentserviceOrServicetype = 14
  object ComponentserviceOrServicetype = 15
  predicate PredicateType = 16
  optional quantifierQualifier OntologyClass = 17
  optional availabilitySite DeploymentEntity = 18
  optional stageQualifier LifecycleStage = 19
  optional observableState ErrorOrObservableFeature = 20
 }
// A homology association between two componentservices. May be orthology (in which case the species of subject and object should differ) or paralogy (in which case the species may be the same)
message ComponentserviceToComponentserviceHomologyAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject ComponentserviceOrServicetype = 14
  object ComponentserviceOrServicetype = 15
  predicate PredicateType = 16
 }
message ComponentserviceToErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject ComponentserviceOrServicetype = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
 }
message ComponentserviceToGoTermAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject OperationalEntity = 15
  object ComponentserviceOntologyClass = 16
 }
message ComponentserviceToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject ComponentserviceOrServicetype = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// A componentservice is transcribed and potentially translated to a servicetype
message ComponentserviceToServicetypeRelationship
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject Componentservice = 14
  object ServicetypeMixin = 15
  predicate PredicateType = 16
 }
// The unit of service workload the component is capable of providing or protecting.
message Componentserviceinstance
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// A componentservice is a collection of componentserviceinstances
message ComponentserviceinstanceToComponentserviceRelationship
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject Componentserviceinstance = 15
  object Componentservice = 16
 }
message ComputationalArchitecturalStyle
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// One or more causally connected executions of operational functions
message ComputationalProcess
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// Either an individual operational activity, or a collection of causally connected operational activities
message ComputationalProcessOrActivity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// Level of confidence in a statement
message ConfidenceLevel
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional license String = 10
  optional rights String = 11
  optional format String = 12
  optional creationDate Date = 13
 }
// A control actor (often a cluster) consumed for information, engineering or technical use.
message ConsumedResource
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasControlActor ControlActor = 11
 }
// Any association between an entity (such as a publication) and various agents that contribute to its realisation
message ContributorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated publications Publication = 10
  optional type String = 11
  repeated category Association = 12
  subject InformationContentEntity = 13
  predicate PredicateType = 14
  object Agent = 15
  repeated qualifiers OntologyClass = 16
 }
// May be a orchestration entity or a formulation with a orchestration entity as active ingredient, or a complex resource with multiple orchestration entities as part
message ControlActor
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// Any intermediate or servicetype resulting from director supervision. Includes primary and secondary controllers.
message Controller
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional isController Boolean = 11
 }
// An entity that has digital reality (a.k.a. cyber essence).
message CyberEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
message CyberProcess
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// A region of the componentserviceinstance sequence within a componentservice.
message Daemon
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// A componentserviceinstance is formed from multiple daemons
message DaemonToComponentserviceinstanceRelationship
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject Daemon = 15
  object Componentserviceinstance = 16
 }
message Data
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// an item that refers to a collection of data from a data source.
message Dataset
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional license String = 10
  optional rights String = 11
  optional format String = 12
  optional creationDate Date = 13
 }
// an item that holds distribution level information about a dataset.
message DatasetDistribution
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional license String = 10
  optional rights String = 11
  optional format String = 12
  optional creationDate Date = 13
  optional distributionDownloadUrl String = 14
 }
message DatasetVersion
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional license String = 10
  optional rights String = 11
  optional format String = 12
  optional creationDate Date = 13
  optional hasDataset Dataset = 14
  optional ingestDate String = 15
  optional hasDistribution DatasetDistribution = 16
 }
message Datastream
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
message Death
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// A process location, serviceunit type or gross deployment part
message DeploymentEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
message DeploymentEntityToDeploymentEntityAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject DeploymentEntity = 15
  object DeploymentEntity = 16
 }
// A relationship between two deployment entities where the relationship is ontogenic, i.e. the two entities are related by development. A number of different relationship types can be used to specify the precise nature of the relationship.
message DeploymentEntityToDeploymentEntityOntogenicAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject DeploymentEntity = 14
  object DeploymentEntity = 15
  predicate PredicateType = 16
 }
// A relationship between two deployment entities where the relationship is mereological, i.e the two entities are related by parthood. This includes relationships between components and componentservices, between componentservice and servicegroup/replicasets, servicegroup/replicasets and whole systems
message DeploymentEntityToDeploymentEntityPartOfAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject DeploymentEntity = 14
  object DeploymentEntity = 15
  predicate PredicateType = 16
 }
// A thing made or adapted for a particular purpose, especially a piece of mechanical or electronic equipment
message Device
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// Attributes relating to a empirical manifestation
message EmpiricalAttribute
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// The course a error typically takes from its onset, progression in time, and eventual resolution or death of the affected individual
message EmpiricalCourse
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// Any entity or process that exists in the empirical domain and outside the computational realm. Errors are placed under computational entities
message EmpiricalEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// this category is currently considered broad enough to tag empirical lab measurements and other computational attributes taken as 'empirical traits' with some statistical score, for example, a p value in service associations.
message EmpiricalFinding
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated inTaxon SystemTaxon = 9
  repeated hasAttribute EmpiricalAttribute = 10
 }
message EmpiricalIntervention
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A empirical measurement is a special kind of attribute which results from a quality of serviceunit observation from a subject individual or sample. Measurements can be connected to their subject by the 'has attribute' slot.
message EmpiricalMeasurement
 {
  optional name LabelType = 1
  repeated hasQuantitativeValue QuantityValue = 2
  optional hasQualitativeValue NamedThing = 3
  optional iri IriType = 4
  optional source LabelType = 5
  hasAttributeType OntologyClass = 6
 }
// Used to characterize and specify the observable abnormalities defined in the observable abnormality sub-ontology, with respect to severity, laterality, and other aspects
message EmpiricalModifier
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
message EmpiricalTrial
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A environmental exposure is a factor relating to abiotic processes in the environment including atmospheric (heat, cold, general pollution) and water-born contaminants
message EnvironmentalExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional timepoint TimeType = 10
 }
message EnvironmentalFeature
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
message EnvironmentalNotificationContaminant
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
message EnvironmentalProcess
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// An epidemiological outcome, such as societal error burden, resulting from an exposure event.
message EpidemiologicalOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
message Error
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// Either one of a error or an individual observable feature. Some knowledge resources such as Monarch treat these as distinct, others conflate.
message ErrorOrObservableFeature
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
message ErrorOrObservableFeatureAssociationToLocationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object DeploymentEntity = 16
 }
// A error or observable feature exposure is where a error state is manifested which represents an precondition, leading to or influencing an outcome, e.g. hypertension leading to a related error outcome such as cardiovascular error.
message ErrorOrObservableFeatureExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional timepoint TimeType = 11
 }
// logical outcomes resulting from an exposure event which is the manifestation of a error or other characteristic observability.
message ErrorOrObservableFeatureOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// An association between either a error or a observable feature and an deployment entity, where the error/feature manifests in that site.
message ErrorOrObservableFeatureToLocationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object DeploymentEntity = 16
 }
// An association between an exposure event and a error.
message ErrorToExposureEventAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
 }
// An association between a error and a observable feature in which the observable feature is associated with the error in some way.
message ErrorToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// Class of evidence that supports an association
message EvidenceType
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional license String = 10
  optional rights String = 11
  optional format String = 12
  optional creationDate Date = 13
 }
// Any association between an environment and a observable feature, where being in the environment influences the observability.
message ExposureEventToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject ExposureEvent = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// An association between an exposure event and an outcome.
message ExposureEventToOutcomeAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
  optional hasPopulationContext PopulationOfIndividualSystems = 17
  optional hasTemporalContext TimeType = 18
 }
// An abnormal deployment structure, when viewed as an exposure, representing an precondition, leading to or influencing an outcome,
message FaultyDeploymentExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
  optional timepoint TimeType = 11
 }
// An outcome resulting from an exposure event which is the manifestation of an abnormal deployment structure.
message FaultyDeploymentOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// An deployment structure with the potential of have an abnormal or deleterious effect at the process, serviceunit, multiserviceunit, or systemal level.
message FaultyDeploymentStructure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// A compulogic function or a process having an abnormal or deleterious effect at the subcomponent, component, multi-component, node, or system level.
message FaultyProcess
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// A faulty process, when viewed as an exposure, representing an precondition, leading to or influencing an outcome, e.g. autoimmunity leading to disease.
message FaultyProcessExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
  optional timepoint TimeType = 13
 }
// An outcome resulting from an exposure event which is the manifestation of a faulty process.
message FaultyProcessOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// describes the frequency of occurrence of an event or condition
message FrequencyValue
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// An association between a macrooperational machine mixin (componentservice, servicetype or complex of servicetypes) and either a operational activity, a computational process or a component location in which a function is executed.
message FunctionalAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject MacrooperationalMachineMixin = 15
  object ComponentserviceOntologyClass = 16
 }
// A geographic exposure is a factor relating to geographic proximity to some impactful entity.
message GeographicExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional latitude Float = 10
  optional longitude Float = 11
  optional timepoint TimeType = 12
 }
// a location that can be described in lat/long coordinates
message GeographicLocation
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional latitude Float = 10
  optional longitude Float = 11
 }
// a location that can be described in lat/long coordinates, for a particular time
message GeographicLocationAtTime
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional latitude Float = 10
  optional longitude Float = 11
  optional timepoint TimeType = 12
 }
message GrossDeploymentStructure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
message Homogeneity
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// An instance of an system. For example, Richard Nixon, Charles Darwin, my pet cat. Example ID: ORCID:0000-0002-5355-2576
message IndividualSystem
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// The pattern or 'mode' in which a particular service trait or disorder is passed from one generation to the next, e.g. autosomal dominant, autosomal recessive, etc.
message Inheritance
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// TBD
message KernelInterrupt
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
message KernelMessage
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
message KernelServicetype
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
// Represents a serviceinstance that is a specific isoform of the canonical or reference kernel
message KernelServicetypeIsoform
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
// A stage of development or growth of a system.
message LifecycleStage
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
message MacrooperationalComplexMixin
 {
  optional name SymbolType = 1
 }
// A functional association between a macrooperational machine mixin (componentservice, servicetype or complex) and a component (as represented in the GO component branch), where the entity carries out its function in the component
message MacrooperationalMachineMixinToComponentAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject MacrooperationalMachineMixin = 15
  object Component = 16
 }
// A functional association between a macrooperational machine mixin (componentservice, servicetype or complex) and a computational process or pathway (as represented in the GO computational process branch), where the entity carries out some part of the process, regulates it, or acts upstream of it
message MacrooperationalMachineMixinToComputationalProcessAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject MacrooperationalMachineMixin = 15
  object ComputationalProcess = 16
 }
// A functional association between a macrooperational machine mixin (componentservice, servicetype or complex) and a operational activity (as represented in the GO operational function branch), where the entity carries out the activity, or contributes to its execution
message MacrooperationalMachineMixinToOperationalActivityAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject MacrooperationalMachineMixin = 15
  object OperationalActivity = 16
 }
message MessagePassing
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// An attribute corresponding to the microservice architectural style of the individual, based upon microservice composition of architectural style containers.
message MicroserviceArchitecturalStyle
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// A single monomeric position in the service monomeric variants are single monomeric positions in service DNA at which different sequence alternatives exist
message MonomericVariant
 {
  optional iri IriType = 1
  optional type String = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  repeated category NamedThing = 8
  repeated inTaxon SystemTaxon = 9
  repeated hasComponentservice Componentservice = 10
  optional hasComputationalSequence ComputationalSequence = 11
  id String = 12
 }
// An outcome of death from resulting from an exposure event.
message MortalityOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// a databased entity or concept/class
message NamedThing
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
message NoncodingKernelServicetype
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
// A event consumed by a healthy system as a source of information
message Notification
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  repeated hasData Data = 11
  repeated hasControlActor ControlActor = 12
 }
message NotificationComponent
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// An attribute corresponding to the observable architectural style of the individual, based upon the reproductive applications present.
message ObservableArchitecturalStyle
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
message ObservableFeature
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// A property of a observable
message ObservableQuality
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
message OfflineMaintenance
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// An outcome resulting from an exposure event which is the increased manifestation of acute (e.g. emergency room visit) or chronic (inpatient) offline maintenance.
message OfflineMaintenanceOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// The age group in which (error) symptom manifestations appear
message Onset
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// a concept or class in an ontology, vocabulary or thesaurus
message OntologyClass
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// An execution of a operational function carried out by a servicetype or macrooperational complex.
message OperationalActivity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput ControlActor = 10
  repeated hasOutput ControlActor = 11
  repeated enabledBy MacrooperationalMachineMixin = 12
 }
// A componentservice, servicetype, small task or macrotask (including serviceinstance complex)"
message OperationalEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// A orchestration exposure is an intake of a particular control actor, other than a administrative operation.
message OrchestrationExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional timepoint TimeType = 11
 }
// An interaction between a orchestration entity and a componentservice or servicetype.
message OrchestrationToComponentserviceAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object ComponentserviceOrServicetype = 16
 }
// An interaction between a orchestration entity and a observability or error, where the presence of the orchestration gives rise to or exacerbates the observability.
message OrchestrationToErrorOrObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object ErrorOrObservableFeature = 16
 }
// A relationship between two orchestration entities. This can encompass actual interactions as well as temporal causal edges, e.g. one orchestration converted to another.
message OrchestrationToOrchestrationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object ControlActor = 16
 }
// A causal relationship between two orchestration entities, where the subject represents the upstream entity and the object represents the downstream. For any such association there is an implicit reaction:
//   IF
//   R has-input C1 AND
//   R has-output C2 AND
//   R enabled-by P AND
//   R type Reaction
//   THEN
//   C1 derives-into C2 <<catalyst qualifier P>>
message OrchestrationToOrchestrationDerivationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  repeated catalystQualifier MacrooperationalMachineMixin = 14
  subject ControlActor = 15
  object ControlActor = 16
  predicate PredicateType = 17
 }
// An interaction between a orchestration entity and a computational process or pathway.
message OrchestrationToPathwayAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  object Pathway = 16
 }
// An interaction between two componentservices or two servicetypes. May be cyber (e.g. serviceinstance binding) or service (between componentservices). May be symmetric (e.g. serviceinstance interaction) or directed (e.g. phosphorylation)
message PairwiseComponentserviceToComponentserviceInteraction
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  optional negated Boolean = 8
  repeated qualifiers OntologyClass = 9
  repeated publications Publication = 10
  optional type String = 11
  repeated category Association = 12
  subject ComponentserviceOrServicetype = 13
  object ComponentserviceOrServicetype = 14
  predicate PredicateType = 15
  relation Uriorcurie = 16
 }
// An interaction at the operational level between two cyber entities
message PairwiseOperationallyInteraction
 {
  optional iri IriType = 1
  optional name LabelType = 2
  optional description NarrativeText = 3
  optional source LabelType = 4
  repeated providedBy Agent = 5
  repeated hasAttribute Attribute = 6
  optional negated Boolean = 7
  repeated qualifiers OntologyClass = 8
  repeated publications Publication = 9
  optional type String = 10
  repeated category Association = 11
  optional interactingTasksCategory OntologyClass = 12
  subject OperationalEntity = 13
  id String = 14
  predicate PredicateType = 15
  relation Uriorcurie = 16
  object OperationalEntity = 17
 }
message Pathway
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// a fact or situation that is observed to exist or happen, especially one whose cause or explanation is in question
message Phenomenon
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// Any entity or process that exists at the level of the whole planet
message PlanetaryEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A collection of individuals from the same taxonomic class distinguished by one or more characteristics.  Characteristics can include, but are not limited to, shared geographic location, services, observabilitys.
message PopulationOfIndividualSystems
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// An association between a two populations
message PopulationToPopulationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject PopulationOfIndividualSystems = 14
  object PopulationOfIndividualSystems = 15
  predicate PredicateType = 16
 }
message Power
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
 }
// A series of actions conducted in a certain order or manner
message Procedure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// Any published piece of information. Can refer to a whole publication, its encompassing publication (i.e. journal or book) or to a part of a publication, if of significant knowledge scope (e.g. a figure, figure legend, or section highlighted by NLP). The scope is intended to be general and include information published on the web, as well as printed resources, either directly or in one of the Publication Csolink category subclasses.
message Publication
 {
  optional iri IriType = 1
  optional description NarrativeText = 2
  optional source LabelType = 3
  repeated providedBy Agent = 4
  repeated hasAttribute Attribute = 5
  repeated category NamedThing = 6
  optional license String = 7
  optional rights String = 8
  optional format String = 9
  optional creationDate Date = 10
  repeated authors String = 11
  repeated pages String = 12
  optional summary String = 13
  repeated keywords String = 14
  repeated sumoTerms Uriorcurie = 15
  repeated xref IriType = 16
  id String = 17
  optional name LabelType = 18
  type String = 19
 }
// A value of an attribute that is quantitative and measurable, available as a combination of a unit and a numeric value
message QuantityValue
 {
  optional hasUnit Unit = 1
  optional hasNumericValue Double = 2
 }
// A componentservice altered in its availability level in the context of some experiment as a result of being targeted by componentservice-knockdown reagent(s).
message ReagentTargetedComponentservice
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// An OWL property used as an edge label
message RelationshipType
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// A repairing is targeted at a error or observability and may involve multiple administrative operational 'exposures', engineering devices and/or procedures
message Repairing
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasAdministrativeOperation AdministrativeOperation = 10
  repeated hasDevice Device = 11
  repeated hasProcedure Procedure = 12
  optional timepoint TimeType = 13
 }
// A sample is a limited quantity of something (e.g. an individual or set of individuals from a population, or a portion of a event) to be used for testing, analysis, inspection, investigation, demonstration, or trial use. [SIO]
message ResourceSample
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
// An association between a resource sample and the resource entity from which it is derived.
message ResourceSampleDerivationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject ResourceSample = 14
  object NamedThing = 15
  predicate PredicateType = 16
 }
// An association between a resource sample and a error or observability.
message ResourceSampleToErrorOrObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
 }
// An association between a sequence feature and a workload entity it is localized to.
message SequenceAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  predicate PredicateType = 9
  object NamedThing = 10
  relation Uriorcurie = 11
  optional negated Boolean = 12
  repeated qualifiers OntologyClass = 13
  repeated publications Publication = 14
  optional type String = 15
  repeated category Association = 16
 }
// For example, a particular daemon is part of a particular componentserviceinstance or componentservice
message SequenceFeatureRelationship
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject WorkloadEntity = 15
  object WorkloadEntity = 16
 }
// A variantcomponentservice that varies in its sequence from what is considered the reference variantcomponentservice at that locus.
message SequenceVariant
 {
  optional iri IriType = 1
  optional type String = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  repeated category NamedThing = 8
  repeated inTaxon SystemTaxon = 9
  repeated hasComponentservice Componentservice = 10
  optional hasComputationalSequence ComputationalSequence = 11
  id String = 12
 }
// This class may rarely be available except if use cases of a given knowledge graph support its utility.
message Serial
 {
  optional iri IriType = 1
  optional description NarrativeText = 2
  optional source LabelType = 3
  repeated providedBy Agent = 4
  repeated hasAttribute Attribute = 5
  repeated category NamedThing = 6
  optional license String = 7
  optional rights String = 8
  optional format String = 9
  optional creationDate Date = 10
  repeated authors String = 11
  repeated pages String = 12
  optional summary String = 13
  repeated keywords String = 14
  repeated sumoTerms Uriorcurie = 15
  repeated xref IriType = 16
  optional name LabelType = 17
  optional isoAbbreviation String = 18
  optional volume String = 19
  optional issue String = 20
  id String = 21
  type String = 22
 }
// A service background exposure is where an individual's specific service background of serviceunits, sequence variants or other pre-existing service conditions constitute a kind of 'exposure' to the system, leading to or influencing an outcome.
message ServiceBackgroundExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  optional timepoint TimeType = 12
  repeated hasComponentserviceOrServicetype Componentservice = 13
 }
// A relationship between a sequence feature and a workload entity it is localized to. The reference entity may be a container, componentservice or information entity such as a namespace.
message ServiceSequenceLocalization
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  optional startInterbaseCoordinate Integer = 14
  optional endInterbaseCoordinate Integer = 15
  optional workloadBuild String = 16
  optional strand String = 17
  optional phase String = 18
  subject WorkloadEntity = 19
  object WorkloadEntity = 20
  predicate PredicateType = 21
 }
// A servicetype that is composed of a chain of instruction sequences and is produced by translation of kernel message
message Serviceinstance
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
// Represents a serviceinstance that is a specific isoform of the canonical or reference serviceinstance.
message ServiceinstanceIsoform
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  repeated synonym LabelType = 12
  repeated xref IriType = 13
 }
// The set of components, whose part functionalily combines to form a desired service, must tightly collaborate as a group, logically named serviceunit (pod). A serviceunit represents a single instance of a running process in a cluster. It can be deployed, isolated, and repaired independently.
message Serviceunit
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// An information content entity that describes a workload by specifying the total variation in service sequence and/or componentservice availability, relative to some established background
message Serviceunittype
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
  optional hasHomogeneity Homogeneity = 12
 }
message ServiceunittypeAsAModelOfErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  object NamedThing = 15
  optional frequencyQualifier FrequencyValue = 16
  optional severityQualifier SeverityValue = 17
  optional onsetQualifier Onset = 18
  subject Serviceunittype = 19
 }
// Any association between a serviceunittype and a componentservice. The serviceunittype have have multiple variants in that componentservice or a single one. There is no assumption of cardinality
message ServiceunittypeToComponentserviceAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  subject Serviceunittype = 15
  object Componentservice = 16
 }
message ServiceunittypeToErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject NamedThing = 14
  predicate PredicateType = 15
  object NamedThing = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
 }
// Any association between one serviceunittype and a observable feature, where having the serviceunittype confers the observability, either in isolation or through environment
message ServiceunittypeToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  object NamedThing = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  predicate PredicateType = 15
  subject Serviceunittype = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// Any association between one serviceunittype and a microservice entity that is a subset of it
message ServiceunittypeToServiceunittypePartAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  subject Serviceunittype = 15
  object Serviceunittype = 16
 }
// Any association between a serviceunittype and a sequence variant.
message ServiceunittypeToVariantAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  subject Serviceunittype = 15
  object SequenceVariant = 16
 }
// describes the severity of a observable feature or error
message SeverityValue
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// Attributes relating to a socioeconomic manifestation
message SocioeconomicAttribute
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// A socioeconomic exposure is a factor relating to social and financial status of an affected individual (e.g. poverty).
message SocioeconomicExposure
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasInput NamedThing = 9
  repeated hasOutput NamedThing = 10
  repeated enabledBy CyberEntity = 11
  repeated hasAttribute SocioeconomicAttribute = 12
  optional timepoint TimeType = 13
 }
// An general social or economic outcome, such as healthcare costs, utilization, etc., resulting from an exposure event
message SocioeconomicOutcome
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated hasInput NamedThing = 10
  repeated hasOutput NamedThing = 11
  repeated enabledBy CyberEntity = 12
 }
// A group of individuals banded together or repaired as a group as participants in a research study.
message StudyPopulation
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated category NamedThing = 8
  repeated hasAttribute Attribute = 9
  repeated inTaxon SystemTaxon = 10
 }
// describes a characteristic of an systemic entity.
message SystemAttribute
 {
  optional name LabelType = 1
  hasAttributeType OntologyClass = 2
  repeated hasQuantitativeValue QuantityValue = 3
  optional hasQualitativeValue NamedThing = 4
  optional iri IriType = 5
  optional source LabelType = 6
 }
// A classification of a set of systems. Example instances: NCBITaxon:9606 (Homo sapiens), NCBITaxon:2 (Bacteria). Can also be used to represent strains or subspecies.
message SystemTaxon
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  optional hasTaxonomicRank TaxonomicRank = 10
  repeated subclassOf SystemTaxon = 11
 }
message SystemicEntityAsAModelOfErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject SystemicEntity = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
 }
// A descriptor for the rank within a taxonomic classification. Example instance: TAXRANK:0000017 (kingdom)
message TaxonomicRank
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
 }
message VariantAsAModelOfErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  predicate PredicateType = 14
  object NamedThing = 15
  optional frequencyQualifier FrequencyValue = 16
  optional severityQualifier SeverityValue = 17
  optional onsetQualifier Onset = 18
  subject SequenceVariant = 19
 }
// An association between a variant and a componentservice, where the variant has a service association with the componentservice (i.e. is in linkage disequilibrium)
message VariantToComponentserviceAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  object Componentservice = 15
  predicate PredicateType = 16
 }
// An association between a variant and availability of a componentservice (i.e. e-QTL)
message VariantToComponentserviceAvailabilityAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  subject NamedThing = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  object Componentservice = 15
  predicate PredicateType = 16
  optional quantifierQualifier OntologyClass = 17
  optional availabilitySite DeploymentEntity = 18
  optional stageQualifier LifecycleStage = 19
  optional observableState ErrorOrObservableFeature = 20
 }
message VariantToErrorAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  relation Uriorcurie = 8
  optional negated Boolean = 9
  repeated qualifiers OntologyClass = 10
  repeated publications Publication = 11
  optional type String = 12
  repeated category Association = 13
  subject NamedThing = 14
  predicate PredicateType = 15
  object NamedThing = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
 }
message VariantToObservableFeatureAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  object NamedThing = 9
  relation Uriorcurie = 10
  optional negated Boolean = 11
  repeated qualifiers OntologyClass = 12
  repeated publications Publication = 13
  optional type String = 14
  repeated category Association = 15
  subject SequenceVariant = 16
  optional frequencyQualifier FrequencyValue = 17
  optional severityQualifier SeverityValue = 18
  optional onsetQualifier Onset = 19
  optional architecturalStyleQualifier ComputationalArchitecturalStyle = 20
 }
// An association between a variant and a population, where the variant has particular frequency in the population
message VariantToPopulationAssociation
 {
  id String = 1
  optional iri IriType = 2
  optional name LabelType = 3
  optional description NarrativeText = 4
  optional source LabelType = 5
  repeated providedBy Agent = 6
  repeated hasAttribute Attribute = 7
  predicate PredicateType = 8
  relation Uriorcurie = 9
  optional negated Boolean = 10
  repeated qualifiers OntologyClass = 11
  repeated publications Publication = 12
  optional type String = 13
  repeated category Association = 14
  subject SequenceVariant = 15
  object PopulationOfIndividualSystems = 16
  optional hasQuotient Double = 17
  optional hasCount Integer = 18
  optional hasTotal Integer = 19
  optional hasPercentage Double = 20
  optional frequencyQualifier FrequencyValue = 21
 }
// A set of zero or more variantcomponentservices on a single instance of a Sequence
message Variantcomponentservicetype
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// A workload is the sum of componentservice resources within a serviceunit or virion.
message Workload
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }
// An entity that can either be directly located on a workload (componentservice, componentserviceinstance, daemon, regulatory region) or is encoded in a workload (serviceinstance)
message WorkloadEntity
 {
  id String = 1
  optional iri IriType = 2
  optional type String = 3
  optional name LabelType = 4
  optional description NarrativeText = 5
  optional source LabelType = 6
  repeated providedBy Agent = 7
  repeated hasAttribute Attribute = 8
  repeated category NamedThing = 9
  repeated inTaxon SystemTaxon = 10
  optional hasComputationalSequence ComputationalSequence = 11
 }

