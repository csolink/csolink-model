type Activity implements ActivityAndBehavior
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface ActivityAndBehavior
  {
  }

interface AdministrativeEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type AdministrativeOperation implements Cluster
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasControlActor: [ControlActor]
  }

type AdministrativeOperationalExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasControlActor: [ControlActor]
    timepoint: TimeType
  }

type AdministrativeOperationalToComponentserviceAssociation implements AdministrativeOperationalToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: ComponentserviceOrServicetype!
  }

type AdministrativeOperationalToComponentserviceInteractionExposure implements ComponentserviceGroupingMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasControlActor: [ControlActor]
    timepoint: TimeType
    hasComponentserviceOrServicetype: [Componentservice]
  }

interface AdministrativeOperationalToEntityAssociationMixin
  {
    subject: AdministrativeOperation!
  }

type Agent
  {
    iri: IriType
    type: String
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    affiliation: [Uriorcurie]
    address: String
    id: String!
    name: LabelType
  }

interface Annotation
  {
  }

type Article
  {
    iri: IriType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    sumoTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
    type: String!
    publishedIn: Uriorcurie!
    isoAbbreviation: String
    volume: String
    issue: String
  }

type Association
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
  }

type Attribute
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type AttributeType
  {
  }

type Awareness
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Behavior
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type BehaviorToBehavioralFeatureAssociation implements EntityToObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: Behavior!
    object: BehavioralFeature!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type BehavioralExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
    timepoint: TimeType
  }

type BehavioralFeature
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type BehavioralOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type BioticExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasTaxonomicRank: TaxonomicRank
    subclassOf: [SystemTaxon]
    timepoint: TimeType
  }

type Bitstream
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Book
  {
    iri: IriType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    sumoTerms: [Uriorcurie]
    xref: [IriType]
    name: LabelType
    id: String!
    type: String!
  }

type BookChapter
  {
    iri: IriType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    sumoTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
    type: String!
    publishedIn: Uriorcurie!
    volume: String
    chapter: String
  }

type Case
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

interface CaseToEntityAssociationMixin
  {
    subject: Case!
  }

type CaseToObservableFeatureAssociation implements EntityToObservableFeatureAssociationMixin, CaseToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

interface Cluster
  {
    hasControlActor: [ControlActor]
  }

type CodingSequence
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

type Cohort
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type ComplexOrchestrationExposure implements Cluster
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    timepoint: TimeType
    hasControlActor: [ControlActor]
  }

type Component
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type ComponentType
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
  }

type ComponentTypeAsAModelOfErrorAssociation implements ModelToErrorAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentType!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

interface ComponentTypeToEntityAssociationMixin
  {
    subject: ComponentType!
  }

type ComponentTypeToErrorOrObservableFeatureAssociation implements ComponentTypeToEntityAssociationMixin, EntityToErrorOrObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ErrorOrObservableFeature!
  }

type Componentservice implements ComponentserviceOrServicetype
  {
    name: SymbolType
    symbol: String
    synonym: [LabelType]
    xref: [IriType]
  }

type ComponentserviceAsAModelOfErrorAssociation implements ModelToErrorAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: ComponentserviceOrServicetype!
  }

type ComponentserviceAvailabilityMixin
  {
    quantifierQualifier: OntologyClass
    availabilitySite: DeploymentEntity
    stageQualifier: LifecycleStage
    observableState: ErrorOrObservableFeature
  }

type ComponentserviceFamily implements ComponentserviceGroupingMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComponentserviceOrServicetype: [Componentservice]
  }

interface ComponentserviceGroupingMixin
  {
    hasComponentserviceOrServicetype: [Componentservice]
  }

type ComponentserviceHasVariantThatContributesToErrorAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sequenceVariantQualifier: SequenceVariant
    subject: ComponentserviceOrServicetype!
  }

type ComponentserviceOntologyClass
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface ComponentserviceOrServicetype
  {
    name: SymbolType
  }

type ComponentserviceRegulatoryRelationship
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    subject: ComponentserviceOrServicetype!
    object: ComponentserviceOrServicetype!
  }

type ComponentserviceToAvailabilitySiteAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    stageQualifier: LifecycleStage
    quantifierQualifier: OntologyClass
    subject: ComponentserviceOrServicetype!
    object: DeploymentEntity!
    predicate: PredicateType!
  }

interface ComponentserviceToComponentserviceAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    object: ComponentserviceOrServicetype!
  }

type ComponentserviceToComponentserviceCoavailabilityAssociation implements ComponentserviceAvailabilityMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    object: ComponentserviceOrServicetype!
    predicate: PredicateType!
    quantifierQualifier: OntologyClass
    availabilitySite: DeploymentEntity
    stageQualifier: LifecycleStage
    observableState: ErrorOrObservableFeature
  }

type ComponentserviceToComponentserviceHomologyAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    object: ComponentserviceOrServicetype!
    predicate: PredicateType!
  }

interface ComponentserviceToEntityAssociationMixin
  {
    subject: ComponentserviceOrServicetype!
  }

type ComponentserviceToErrorAssociation implements EntityToErrorAssociationMixin, ComponentserviceToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type ComponentserviceToGoTermAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: OperationalEntity!
    object: ComponentserviceOntologyClass!
  }

type ComponentserviceToObservableFeatureAssociation implements EntityToObservableFeatureAssociationMixin, ComponentserviceToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type ComponentserviceToServicetypeRelationship
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: Componentservice!
    object: ServicetypeMixin!
    predicate: PredicateType!
  }

type Componentserviceinstance
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

type ComponentserviceinstanceToComponentserviceRelationship
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: Componentserviceinstance!
    object: Componentservice!
  }

type ComputationalArchitecturalStyle
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

interface ComputationalEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type ComputationalProcess implements Occurrent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type ComputationalProcessOrActivity implements Occurrent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type ConfidenceLevel
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type ConsumedResource implements Cluster
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasControlActor: [ControlActor]
  }

type ContributorAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    publications: [Publication]
    type: String
    category: [Association]!
    subject: InformationContentEntity!
    predicate: PredicateType!
    object: Agent!
    qualifiers: [OntologyClass]
  }

type ControlActor
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Controller
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    isController: Boolean
  }

type CyberEntity implements CyberEssence
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface CyberEssence
  {
  }

interface CyberEssenceOrOccurrent
  {
  }

type CyberProcess
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type Daemon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

type DaemonToComponentserviceinstanceRelationship
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: Daemon!
    object: Componentserviceinstance!
  }

type Data
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Dataset
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type DatasetDistribution
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    distributionDownloadUrl: String
  }

interface DatasetSummary
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    hasDataset: Dataset
    ingestDate: String
    hasDistribution: DatasetDistribution
    sourceWebPage: String
  }

type DatasetVersion
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    hasDataset: Dataset
    ingestDate: String
    hasDistribution: DatasetDistribution
  }

type Datastream
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Death
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type DeploymentEntity implements ThingWithTaxon, CyberEssence
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type DeploymentEntityToDeploymentEntityAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: DeploymentEntity!
    object: DeploymentEntity!
  }

type DeploymentEntityToDeploymentEntityOntogenicAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: DeploymentEntity!
    object: DeploymentEntity!
    predicate: PredicateType!
  }

type DeploymentEntityToDeploymentEntityPartOfAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: DeploymentEntity!
    object: DeploymentEntity!
    predicate: PredicateType!
  }

type Device
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface DistributionLevel
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    hasDataset: Dataset
    ingestDate: String
    hasDistribution: DatasetDistribution
    downloadUrl: String
  }

type EmpiricalAttribute
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type EmpiricalCourse
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type EmpiricalEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type EmpiricalFinding
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasAttribute: [EmpiricalAttribute]
  }

type EmpiricalIntervention
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type EmpiricalMeasurement
  {
    name: LabelType
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
    hasAttributeType: OntologyClass!
  }

type EmpiricalModifier
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type EmpiricalTrial
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface Entity
  {
    id: String!
    iri: IriType
    category: [CategoryType]!
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
  }

interface EntityToErrorAssociationMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    object: Error!
  }

interface EntityToErrorOrObservableFeatureAssociationMixin
  {
    object: ErrorOrObservableFeature!
  }

interface EntityToExposureEventAssociationMixin
  {
    object: ExposureEvent!
  }

interface EntityToFeatureOrErrorQualifiersMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

interface EntityToObservableFeatureAssociationMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
    description: NarrativeText
    object: ObservableFeature!
  }

interface EntityToOutcomeAssociationMixin
  {
    object: Outcome!
  }

type EnvironmentalExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    timepoint: TimeType
  }

type EnvironmentalFeature
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type EnvironmentalNotificationContaminant
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type EnvironmentalProcess implements Occurrent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type EpidemiologicalOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type Error
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type ErrorOrObservableFeature implements ThingWithTaxon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type ErrorOrObservableFeatureAssociationToLocationAssociation implements ErrorOrObservableFeatureToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: DeploymentEntity!
  }

type ErrorOrObservableFeatureExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    timepoint: TimeType
  }

type ErrorOrObservableFeatureOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

interface ErrorOrObservableFeatureToEntityAssociationMixin
  {
    subject: ErrorOrObservableFeature!
  }

type ErrorOrObservableFeatureToLocationAssociation implements ErrorOrObservableFeatureToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: DeploymentEntity!
  }

interface ErrorToEntityAssociationMixin
  {
    subject: Error!
  }

type ErrorToExposureEventAssociation implements ErrorToEntityAssociationMixin, EntityToExposureEventAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
  }

type ErrorToObservableFeatureAssociation implements EntityToObservableFeatureAssociationMixin, ErrorToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type EvidenceType
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
  }

interface ExposureEvent
  {
    timepoint: TimeType
  }

interface ExposureEventToEntityAssociationMixin
  {
    subject: ExposureEvent!
  }

type ExposureEventToObservableFeatureAssociation implements EntityToObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ExposureEvent!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type ExposureEventToOutcomeAssociation implements ExposureEventToEntityAssociationMixin, EntityToOutcomeAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    hasPopulationContext: PopulationOfIndividualSystems
    hasTemporalContext: TimeType
  }

type FaultyDeploymentExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
    timepoint: TimeType
  }

type FaultyDeploymentOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type FaultyDeploymentStructure implements FaultyEntityMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

interface FaultyEntityMixin
  {
  }

type FaultyProcess
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type FaultyProcessExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
    timepoint: TimeType
  }

type FaultyProcessOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

interface FrequencyQualifierMixin
  {
    frequencyQualifier: FrequencyValue
  }

interface FrequencyQuantifier
  {
    hasCount: Integer
    hasTotal: Integer
    hasQuotient: Double
    hasPercentage: Double
  }

type FrequencyValue
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type FunctionalAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: MacrooperationalMachineMixin!
    object: ComponentserviceOntologyClass!
  }

type GeographicExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    latitude: Float
    longitude: Float
    timepoint: TimeType
  }

type GeographicLocation
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    latitude: Float
    longitude: Float
  }

type GeographicLocationAtTime
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    latitude: Float
    longitude: Float
    timepoint: TimeType
  }

type GrossDeploymentStructure
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type Homogeneity
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type IndividualSystem implements ThingWithTaxon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

interface InformationContentEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type Inheritance
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type KernelInterrupt
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type KernelMessage
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type KernelServicetype implements ServicetypeMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type KernelServicetypeIsoform implements ServicetypeIsoformMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type LifecycleStage implements ThingWithTaxon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type MacrooperationalComplexMixin
  {
    name: SymbolType
  }

interface MacrooperationalMachineMixin
  {
    name: SymbolType
  }

type MacrooperationalMachineMixinToComponentAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: MacrooperationalMachineMixin!
    object: Component!
  }

type MacrooperationalMachineMixinToComputationalProcessAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: MacrooperationalMachineMixin!
    object: ComputationalProcess!
  }

interface MacrooperationalMachineMixinToEntityAssociationMixin
  {
    subject: NamedThing!
  }

type MacrooperationalMachineMixinToOperationalActivityAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: MacrooperationalMachineMixin!
    object: OperationalActivity!
  }

type MessagePassing
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type MicroserviceArchitecturalStyle
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

interface ModelToErrorAssociationMixin
  {
    subject: NamedThing!
    predicate: PredicateType!
  }

type MonomericVariant
  {
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComponentservice: [Componentservice]
    hasComputationalSequence: ComputationalSequence
    id: String!
  }

type MortalityOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type NamedThing
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type NoncodingKernelServicetype
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type Notification implements Cluster
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasData: [Data]
    hasControlActor: [ControlActor]
  }

type NotificationComponent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type ObservableArchitecturalStyle
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type ObservableFeature
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type ObservableQuality
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

interface Occurrent
  {
  }

type OfflineMaintenance
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type OfflineMaintenanceOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type Onset
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type OntologyClass
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type OperationalActivity implements Occurrent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [ControlActor]
    hasOutput: [ControlActor]
    enabledBy: [MacrooperationalMachineMixin]
  }

type OperationalEntity implements ThingWithTaxon, CyberEssence
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

interface OperationalEntityToEntityAssociationMixin
  {
    subject: OperationalEntity!
  }

type OrchestrationExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    timepoint: TimeType
  }

type OrchestrationToComponentserviceAssociation implements OrchestrationToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: ComponentserviceOrServicetype!
  }

interface OrchestrationToEntityAssociationMixin
  {
    subject: ControlActor!
  }

type OrchestrationToErrorOrObservableFeatureAssociation implements OrchestrationToEntityAssociationMixin, EntityToErrorOrObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: ErrorOrObservableFeature!
  }

type OrchestrationToOrchestrationAssociation implements OrchestrationToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: ControlActor!
  }

type OrchestrationToOrchestrationDerivationAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    catalystQualifier: [MacrooperationalMachineMixin]
    subject: ControlActor!
    object: ControlActor!
    predicate: PredicateType!
  }

type OrchestrationToPathwayAssociation implements OrchestrationToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: Pathway!
  }

interface Outcome
  {
  }

type PairwiseComponentserviceToComponentserviceInteraction
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ComponentserviceOrServicetype!
    object: ComponentserviceOrServicetype!
    predicate: PredicateType!
    relation: Uriorcurie!
  }

type PairwiseOperationallyInteraction
  {
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    interactingTasksCategory: OntologyClass
    subject: OperationalEntity!
    id: String!
    predicate: PredicateType!
    relation: Uriorcurie!
    object: OperationalEntity!
  }

interface PathognomonicityQuantifier
  {
  }

type Pathway
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

type Phenomenon implements Occurrent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type PlanetaryEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type PopulationOfIndividualSystems implements ThingWithTaxon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type PopulationToPopulationAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: PopulationOfIndividualSystems!
    object: PopulationOfIndividualSystems!
    predicate: PredicateType!
  }

type Power
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
  }

type Procedure implements ActivityAndBehavior
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type Publication
  {
    iri: IriType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    sumoTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
    type: String!
  }

type QuantityValue
  {
    hasUnit: Unit
    hasNumericValue: Double
  }

type ReagentTargetedComponentservice
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

interface RelationshipQuantifier
  {
  }

type RelationshipType
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type Repairing implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasAdministrativeOperation: [AdministrativeOperation]
    hasDevice: [Device]
    hasProcedure: [Procedure]
    timepoint: TimeType
  }

type ResourceSample implements SubjectOfInvestigation
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

type ResourceSampleDerivationAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: ResourceSample!
    object: NamedThing!
    predicate: PredicateType!
  }

interface ResourceSampleToEntityAssociationMixin
  {
    subject: ResourceSample!
  }

type ResourceSampleToErrorOrObservableFeatureAssociation implements ResourceSampleToEntityAssociationMixin, EntityToErrorOrObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
  }

interface SensitivityQuantifier
  {
  }

type SequenceAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
  }

type SequenceFeatureRelationship
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: WorkloadEntity!
    object: WorkloadEntity!
  }

type SequenceVariant
  {
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComponentservice: [Componentservice]
    hasComputationalSequence: ComputationalSequence
    id: String!
  }

interface SequenceVariantModulatesRepairingAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: SequenceVariant!
    object: Repairing!
  }

type Serial
  {
    iri: IriType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    sumoTerms: [Uriorcurie]
    xref: [IriType]
    name: LabelType
    isoAbbreviation: String
    volume: String
    issue: String
    id: String!
    type: String!
  }

type ServiceBackgroundExposure implements ExposureEvent, ComponentserviceGroupingMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    timepoint: TimeType
    hasComponentserviceOrServicetype: [Componentservice]
  }

type ServiceSequenceLocalization
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    startInterbaseCoordinate: Integer
    endInterbaseCoordinate: Integer
    workloadBuild: String
    strand: String
    phase: String
    subject: WorkloadEntity!
    object: WorkloadEntity!
    predicate: PredicateType!
  }

type Serviceinstance implements ServicetypeMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

type ServiceinstanceIsoform implements ServicetypeIsoformMixin
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    synonym: [LabelType]
    xref: [IriType]
  }

interface ServicetypeIsoformMixin
  {
    name: SymbolType
    synonym: [LabelType]
    xref: [IriType]
  }

interface ServicetypeMixin
  {
    name: SymbolType
    synonym: [LabelType]
    xref: [IriType]
  }

type Serviceunit
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

type Serviceunittype
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
    hasHomogeneity: Homogeneity
  }

type ServiceunittypeAsAModelOfErrorAssociation implements ModelToErrorAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: Serviceunittype!
  }

type ServiceunittypeToComponentserviceAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    subject: Serviceunittype!
    object: Componentservice!
  }

interface ServiceunittypeToEntityAssociationMixin
  {
    subject: Serviceunittype!
  }

type ServiceunittypeToErrorAssociation implements ServiceunittypeToEntityAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type ServiceunittypeToObservableFeatureAssociation implements EntityToObservableFeatureAssociationMixin, ServiceunittypeToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    subject: Serviceunittype!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type ServiceunittypeToServiceunittypePartAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    subject: Serviceunittype!
    object: Serviceunittype!
  }

type ServiceunittypeToVariantAssociation
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    subject: Serviceunittype!
    object: SequenceVariant!
  }

type SeverityValue
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type SocioeconomicAttribute
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type SocioeconomicExposure implements ExposureEvent
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
    hasAttribute: [SocioeconomicAttribute]!
    timepoint: TimeType
  }

type SocioeconomicOutcome implements Outcome
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [CyberEntity]
  }

interface SpecificityQuantifier
  {
  }

type StudyPopulation
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
    inTaxon: [SystemTaxon]
  }

interface SubjectOfInvestigation
  {
  }

type SystemAttribute
  {
    name: LabelType
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    iri: IriType
    source: LabelType
  }

type SystemTaxon
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    hasTaxonomicRank: TaxonomicRank
    subclassOf: [SystemTaxon]
  }

interface SystemicEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    category: [NamedThing]!
    hasAttribute: [Attribute]
  }

type SystemicEntityAsAModelOfErrorAssociation implements ModelToErrorAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: SystemicEntity!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type TaxonomicRank
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
  }

interface ThingWithTaxon
  {
    inTaxon: [SystemTaxon]
  }

type VariantAsAModelOfErrorAssociation implements ModelToErrorAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: SequenceVariant!
  }

type VariantToComponentserviceAssociation implements VariantToEntityAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: Componentservice!
    predicate: PredicateType!
  }

type VariantToComponentserviceAvailabilityAssociation implements ComponentserviceAvailabilityMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    object: Componentservice!
    predicate: PredicateType!
    quantifierQualifier: OntologyClass
    availabilitySite: DeploymentEntity
    stageQualifier: LifecycleStage
    observableState: ErrorOrObservableFeature
  }

interface VariantToEntityAssociationMixin
  {
    subject: SequenceVariant!
  }

type VariantToErrorAssociation implements VariantToEntityAssociationMixin, EntityToErrorAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type VariantToObservableFeatureAssociation implements VariantToEntityAssociationMixin, EntityToObservableFeatureAssociationMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: SequenceVariant!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    architecturalStyleQualifier: ComputationalArchitecturalStyle
  }

type VariantToPopulationAssociation implements VariantToEntityAssociationMixin, FrequencyQuantifier, FrequencyQualifierMixin
  {
    id: String!
    iri: IriType
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    type: String
    category: [Association]!
    subject: SequenceVariant!
    object: PopulationOfIndividualSystems!
    hasQuotient: Double
    hasCount: Integer
    hasTotal: Integer
    hasPercentage: Double
    frequencyQualifier: FrequencyValue
  }

type Variantcomponentservicetype
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

type Workload
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }

type WorkloadEntity
  {
    id: String!
    iri: IriType
    type: String
    name: LabelType
    description: NarrativeText
    source: LabelType
    providedBy: [Agent]
    hasAttribute: [Attribute]
    category: [NamedThing]!
    inTaxon: [SystemTaxon]
    hasComputationalSequence: ComputationalSequence
  }


